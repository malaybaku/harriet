<Window x:Class="Harriet.Views.SettingWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
        mc:Ignorable="d"
        xmlns:l="http://schemas.livet-mvvm.net/2011/wpf"
        xmlns:v="clr-namespace:Harriet.Views"
        xmlns:vm="clr-namespace:Harriet.ViewModels"
        xmlns:converter="clr-namespace:Harriet.Views.Converters"
        xmlns:chrome="http://schemes.grabacr.net/winfx/2014/chrome"
        xmlns:metro="http://schemes.grabacr.net/winfx/2014/controls"
        WindowStyle="None"
        Background="#2D2D30"
        Foreground="White"
        ShowInTaskbar="False"
        Title="Harriet-Option" Height="500" Width="525">
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../Styles/BasicMetroStyle.xaml"/>
                <ResourceDictionary>
                    <converter:RelativePositionConverter x:Key="RelativePositionConverter"/>
                    <converter:FontFamilyStringConverter x:Key="FontFamilyStringConverter"/>
                    <converter:FontWeightBooleanConverter x:Key="FontWeightBooleanConverter"/>
                    <converter:FontStyleBooleanConverter x:Key="FontStyleBooleanConverter"/>
                    <Style x:Key="TextBlockStyle" TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
                        <Setter Property="VerticalAlignment" Value="Center"/>
                    </Style>
                </ResourceDictionary>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>        
    </Window.Resources>    
    <WindowChrome.WindowChrome>
        <WindowChrome CaptionHeight="25"
                      ResizeBorderThickness="0" />
    </WindowChrome.WindowChrome>

    <i:Interaction.Triggers>

        <!--Close処理をVMからのコマンドで受け取る-->
        <l:InteractionMessageTrigger MessageKey="Close" Messenger="{Binding Messenger}">
            <l:WindowInteractionMessageAction />
        </l:InteractionMessageTrigger>         
    </i:Interaction.Triggers>

    <i:Interaction.Behaviors>
        <chrome:MetroChromeBehavior ActiveBrush="DeepSkyBlue"
                                    InactiveBrush="DarkGray"
                                    Mode="VisualStudio2013" />
    </i:Interaction.Behaviors>
    
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="35"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <StackPanel Orientation="Horizontal" Margin="0"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Top">
            <Button Content="r" 
                    Style="{StaticResource CaptionButtonStyleKey}"
                    Command="{Binding CloseCommand}"
                    />
        </StackPanel>
        <StackPanel Orientation="Horizontal" Margin="0" 
                    HorizontalAlignment="Left"
                    VerticalAlignment="Top" Height="35">
            <TextBlock VerticalAlignment="Center"
                       Margin="10,0,0,0"
                       Text="Harriet - Option"
                       FontSize="18"
                       TextAlignment="Center"
                       />
        </StackPanel>
        <TabControl Grid.Row="1" 
                    HorizontalAlignment="Stretch" 
                    VerticalAlignment="Stretch"
                    TabStripPlacement="Left">
            
            <TabItem>
                <TabItem.Resources>
                    <Style TargetType="StackPanel">
                        <Setter Property="Orientation" Value="Horizontal"/>
                        <Setter Property="Width" Value="250"/>
                    </Style>
                    <Style TargetType="TextBlock" BasedOn="{StaticResource TextBlockStyle}">
                        <Setter Property="Margin" Value="5,5,15,5"/>
                    </Style>
                    <Style TargetType="TextBox" BasedOn="{StaticResource TextBoxStyle}">
                        <Setter Property="Margin" Value="5,5,5,5"/>
                        <Setter Property="Width" Value="60"/>
                    </Style>
                    <Style TargetType="Slider" BasedOn="{StaticResource SliderStyle}">
                        <Setter Property="VerticalAlignment" Value="Center"/>
                        <Setter Property="Width" Value="100"/>
                    </Style>
                    <Style TargetType="DockPanel">
                        <Setter Property="Width" Value="250"/>
                        <Setter Property="LastChildFill" Value="False"/>
                    </Style>
                </TabItem.Resources>
                <TabItem.Header>
                    <TextBlock Style="{StaticResource TabItemHeaderTextBlockStyle}" Text="キャラ表示"/>
                </TabItem.Header>
                <WrapPanel Margin="10">
                    <DockPanel>
                        <TextBlock DockPanel.Dock="Left" Text="表示名"/>
                        <TextBox DockPanel.Dock="Right" Width="150"
                                 Text="{Binding ShownCharacterName.CharacterName}"/>
                    </DockPanel>
                    <StackPanel>
                        <TextBlock Text="サイズ倍率"/>
                        <Slider Name="SliderSizeScale" Minimum="0.1" Maximum="2.0" TickFrequency="0.1"
                                Value="{Binding CharacterAppearance.SizeScale, Mode=TwoWay}"
                                />
                        <TextBox Text="{Binding Value, ElementName=SliderSizeScale, Mode=TwoWay}"/>
                    </StackPanel>
                </WrapPanel>
            </TabItem>
            <TabItem>
                <TabItem.Resources>
                    <Style TargetType="StackPanel">
                        <Setter Property="Orientation" Value="Horizontal"/>
                        <Setter Property="HorizontalAlignment" Value="Left"/>
                    </Style>
                    <Style TargetType="TextBlock" BasedOn="{StaticResource TextBlockStyle}">
                        <Setter Property="Margin" Value="5,5,15,5"/>
                    </Style>
                    <Style TargetType="TextBox" BasedOn="{StaticResource TextBoxStyle}">
                        <Setter Property="Margin" Value="5,5,5,5"/>
                        <Setter Property="Width" Value="60"/>
                    </Style>
                    <Style TargetType="Slider" BasedOn="{StaticResource SliderStyle}">
                        <Setter Property="VerticalAlignment" Value="Center"/>
                        <Setter Property="Width" Value="100"/>
                    </Style>
                    <Style TargetType="v:RectColorChoosableButton">
                        <Setter Property="Margin" Value="4"/>
                        <Setter Property="Width" Value="26"/>
                        <Setter Property="Height" Value="26"/>
                        <Setter Property="DockPanel.Dock" Value="Right"/>
                    </Style>
                    <Style TargetType="DockPanel">
                        <Setter Property="HorizontalAlignment" Value="Left"/>
                        <Setter Property="Width" Value="200"/>
                        <Setter Property="LastChildFill" Value="False"/>
                    </Style>
                </TabItem.Resources>
                <TabItem.Header>
                    <TextBlock Text="声とテキスト" Style="{StaticResource TabItemHeaderTextBlockStyle}" />
                </TabItem.Header>
                <ScrollViewer VerticalScrollBarVisibility="Auto">
                    <StackPanel Margin="10" Orientation="Vertical" HorizontalAlignment="Left">
                        <StackPanel Orientation="Vertical" HorizontalAlignment="Left" DataContext="{Binding Voice}" >
                            <StackPanel HorizontalAlignment="Right">
                                <TextBlock Text="声の種類"/>
                                <ComboBox Width="160" Margin="5"        
                                    ItemsSource="{Binding Path=AllVoices}"
                                    SelectedItem="{Binding Path=VoiceType}"/>
                            </StackPanel>
                            <StackPanel>
                                <TextBlock Text="テキスト変換"/>
                                <ComboBox Width="160" Margin="5"        
                                    ItemsSource="{Binding Path=AllTextConverters}"
                                    SelectedItem="{Binding Path=TextConverterType}"/>
                            </StackPanel>
                            <StackPanel>
                                <TextBlock Text="音量"/>
                                <Slider Name="VolumeSlider" Minimum="0" Maximum="200" IsSnapToTickEnabled="True" TickFrequency="1"
                                        Value="{Binding Path=Volume, Mode=TwoWay}"/>
                                <TextBox Text="{Binding Path=Value, ElementName=VolumeSlider, Mode=TwoWay}" />
                            </StackPanel>
                            <StackPanel>
                                <TextBlock Text="速度"/>
                                <Slider Name= "SpeedSlider" Minimum="50" Maximum="200" IsSnapToTickEnabled="True" TickFrequency="1"
                                        Value="{Binding Path=Speed, Mode=TwoWay}"/>
                                <TextBox Text="{Binding Path=Value, ElementName=SpeedSlider, Mode=TwoWay}"/>
                            </StackPanel>
                            <StackPanel>
                                <TextBlock Text="音程"/>
                                <Slider Name="PitchSlider" Minimum="50" Maximum="200" IsSnapToTickEnabled="True" TickFrequency="1" 
                                        Value="{Binding Path=Pitch, Mode=TwoWay}"/>
                                <TextBox Text="{Binding Path=Value, ElementName=PitchSlider, Mode=TwoWay}"/>
                            </StackPanel>
                        </StackPanel>
                        <DockPanel>
                            <TextBlock Text="セリフ枠背景色"/>
                            <v:RectColorChoosableButton Foreground="{Binding ChatWindowColor.Background, Mode=TwoWay}"/>
                        </DockPanel>
                        <DockPanel>
                            <TextBlock Text="セリフ文字色"/>
                            <v:RectColorChoosableButton Foreground="{Binding ChatWindowColor.Foreground, Mode=TwoWay}"/>
                        </DockPanel>
                        <StackPanel Orientation="Vertical">
                            <TextBlock VerticalAlignment="Center">
                                <TextBlock.Inlines>
                                    <Run Text="フォント: "/>
                                    <Run Text="{Binding ChatWindowText.FontFamilyName, Mode=OneWay}"
                                         FontFamily="{Binding ChatWindowText.FontFamilyName, Mode=OneWay, 
                                                      Converter={StaticResource FontFamilyStringConverter}}"
                                         FontStyle="{Binding ChatWindowText.IsFontItalic, Mode=OneWay,
                                                      Converter={StaticResource FontStyleBooleanConverter}}"
                                         FontWeight="{Binding ChatWindowText.IsFontBold, Mode=OneWay,
                                                      Converter={StaticResource FontWeightBooleanConverter}}"
                                         />
                                    <Run Text=", "/>
                                    <Run Text="{Binding ChatWindowText.FontSize, Mode=OneWay}"/>
                                    <Run Text="pt"/>
                                </TextBlock.Inlines>
                            </TextBlock>
                            <Button Content="フォントを選択..." Command="{Binding ChatWindowText.SelectFontCommand}"/>
                        </StackPanel>
                        <StackPanel Width="310">
                            <TextBlock Text="セリフ枠既定サイズ(幅×高さ)"/>
                            <TextBox Width="40" Text="{Binding Path=ChatWindowLayout.DefaultWidth, Mode=TwoWay}"/>
                            <TextBlock Text="×" Margin="0"/>
                            <TextBox Width="40" Text="{Binding Path=ChatWindowLayout.DefaultHeight, Mode=TwoWay}"/>
                        </StackPanel>
                        <StackPanel Orientation="Vertical">
                            <TextBlock Text="セリフ枠表示位置"/>
                            <RadioButton Content="動かない" 
                                 IsChecked="{Binding Path=ChatWindowLayout.RelativePosition, Mode=TwoWay,
                                            Converter={StaticResource RelativePositionConverter},
                                            ConverterParameter=None}"/>
                            <RadioButton Content="右上" 
                                 IsChecked="{Binding Path=ChatWindowLayout.RelativePosition, Mode=TwoWay,
                                            Converter={StaticResource RelativePositionConverter},
                                            ConverterParameter=RightTop}"/>
                            <RadioButton Content="左上"
                                 IsChecked="{Binding Path=ChatWindowLayout.RelativePosition, Mode=TwoWay,
                                            Converter={StaticResource RelativePositionConverter},
                                            ConverterParameter=LeftTop}"/>
                            <RadioButton Content="右下" 
                                 IsChecked="{Binding Path=ChatWindowLayout.RelativePosition, Mode=TwoWay,
                                            Converter={StaticResource RelativePositionConverter},
                                            ConverterParameter=RightBottom}"/>
                            <RadioButton Content="左下"                                 
                                 IsChecked="{Binding Path=ChatWindowLayout.RelativePosition, Mode=TwoWay,
                                            Converter={StaticResource RelativePositionConverter},
                                            ConverterParameter=LeftBottom}"/>
                        </StackPanel>
                    </StackPanel>
                </ScrollViewer>
            </TabItem>
            <TabItem>
                <TabItem.Resources>
                    <Style TargetType="CheckBox" BasedOn="{StaticResource {x:Type CheckBox}}">
                        <Setter Property="Width" Value="300" />
                        <Setter Property="Height" Value="30" />
                        <Setter Property="Margin" Value="4,4,4,4" />
                        <Setter Property="VerticalAlignment" Value="Center" />
                        <Setter Property="FontSize" Value="14"/>
                    </Style>
                </TabItem.Resources>
                <TabItem.Header>
                    <TextBlock Style="{StaticResource TabItemHeaderTextBlockStyle}" Text="スクリプト"/>
                </TabItem.Header>
                <WrapPanel Margin="10">
                    <CheckBox Content="全スクリプトを有効化/無効化"
                              IsChecked="{Binding AllScriptEnabled}"/>
                    <CheckBox Content="初期化スクリプト(initialize.py)を有効化"
                              IsChecked="{Binding ScriptRoutine.InitEnabled}"  />
                    <CheckBox Content="スタートアップ(start.py)を有効化" 
                              IsChecked="{Binding ScriptRoutine.StartEnabled}"/>
                    <CheckBox Content="メインスクリプト(main.py)を有効化" 
                              IsChecked="{Binding ScriptRoutine.MainEnabled}"/>
                    <CheckBox Content="終了時スクリプト(close.py)を有効化" 
                              IsChecked="{Binding ScriptRoutine.CloseEnabled}"/>
                    <CheckBox Content="フレーム毎の実行スクリプト(update.py)を有効化"
                              IsChecked="{Binding ScriptUpdate.UpdateEnabled}"/>
                    <CheckBox Content="パス指示による上記以外のスクリプト実行を有効化"
                              IsChecked="{Binding ScriptRoutine.RequestEnabled}"/>
                </WrapPanel>
            </TabItem>
            <TabItem>
                <TabItem.Resources>
                    <Style TargetType="DockPanel">
                        <Setter Property="Width" Value="300" />
                    </Style>
                    <Style TargetType="TextBox" BasedOn="{StaticResource TextBoxStyle}">
                        <Setter Property="Margin" Value="0,2,20,2" />
                        <Setter Property="HorizontalAlignment" Value="Right" />
                        <Setter Property="VerticalAlignment" Value="Center" />
                        <Setter Property="Width" Value="60" />
                        <Setter Property="DockPanel.Dock" Value="Right" />
                    </Style>
                    <Style TargetType="TextBlock" BasedOn="{StaticResource TextBlockStyle}">
                        <Setter Property="DockPanel.Dock" Value="Left" />
                        <Setter Property="Margin" Value="5"/>
                    </Style>
                    <Style TargetType="RadioButton" BasedOn="{StaticResource {x:Type RadioButton}}">
                        <Setter Property="Margin" Value="2"/>
                    </Style>
                    <Style TargetType="CheckBox">
                        <Setter Property="Margin" Value="2,6,2,6" />
                    </Style>
                </TabItem.Resources>
                <TabItem.Header>
                    <TextBlock Style="{StaticResource TabItemHeaderTextBlockStyle}" Text="スクリプト詳細"/>
                </TabItem.Header>
                <WrapPanel Margin="5,5,5,5" ItemWidth="300" ItemHeight="45">
                    <DockPanel>
                        <TextBlock Text="セリフ間の合間(sec)" />
                        <TextBox Text="{Binding Path=ScriptApi.SerihuInterval, Mode=TwoWay}" />
                    </DockPanel>
                    <DockPanel>
                        <TextBlock Text="main.py読み込み間隔(sec)" />
                        <TextBox Text="{Binding Path=ScriptRoutine.ScriptInterval, Mode=TwoWay}" />
                    </DockPanel>
                    <DockPanel>
                        <TextBlock Text="撫で値の最大値" />
                        <TextBox Text="{Binding Nadenade.Max, Mode=TwoWay}" />
                    </DockPanel>
                    <DockPanel>
                        <TextBlock Text="撫で値の減りやすさ" />
                        <TextBox Text="{Binding Nadenade.DecreasePerFrame, Mode=TwoWay}" />
                    </DockPanel>
                    <TextBlock TextWrapping="Wrap"                               
                               Text="※撫で値: キャラを撫でると増え、時間が経つと減る値。最小値は0" />
                </WrapPanel>
            </TabItem>
            <TabItem DataContext="{Binding ExternalLink}">
                <TabItem.Resources>
                    <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
                        <Setter Property="Width" Value="100"/>
                        <Setter Property="Height" Value="30"/>
                        <Setter Property="Margin" Value="3"/>
                    </Style>
                    <Style TargetType="TextBlock" BasedOn="{StaticResource TextBlockStyle}">
                        <Setter Property="VerticalAlignment" Value="Center"/>
                        <Setter Property="TextWrapping" Value="Wrap"/>
                        <Setter Property="FontSize" Value="12"/>
                        <Setter Property="Margin" Value="5"/>
                    </Style>
                </TabItem.Resources>
                <TabItem.Header>
                    <TextBlock Text="外部リンク" Style="{StaticResource TabItemHeaderTextBlockStyle}" />
                </TabItem.Header>
                <StackPanel Margin="10" Orientation="Vertical" Width="auto" Height="Auto">
                    <TextBlock Text="※ボタンを押すと外部ページへ移動します"/>
                    <DockPanel>
                        <Button DockPanel.Dock="Left" Content="製作者ページ"
                                Command="{Binding Path=GotoCreatorSiteCommand}"/>
                        <TextBlock Text="http://baku-dreameater.net"/>
                    </DockPanel>
                    <DockPanel>
                        <Button DockPanel.Dock="Left" Content="GitHub"
                                Command="{Binding Path=GotoGithubSiteCommand}"/>
                        <TextBlock Text="https://github.com/malaybaku/Harriet"/>
                    </DockPanel>
                    <DockPanel>
                        <Button DockPanel.Dock="Left" Content="関連動画"
                                Command="{Binding Path=GotoVideoMylistCommand}"/>
                        <TextBlock Text="http://www.nicovideo.jp/mylist/50850728"/>
                    </DockPanel>
                </StackPanel>
            </TabItem>
            <TabItem>
                <TabItem.Header>
                    <TextBlock Text="ライセンス" Style="{StaticResource TabItemHeaderTextBlockStyle}"/>
                </TabItem.Header>
                <ScrollViewer>                    
                    <TextBlock Margin="10" TextWrapping="Wrap">
                        <TextBlock.Resources>
                            <SolidColorBrush x:Key="AccentColorLicense">SkyBlue</SolidColorBrush>
                        </TextBlock.Resources>
                            <Span>
                                <Bold>※簡易版です。詳細は同梱の"license.txt"をご確認下さい。</Bold>
                                <LineBreak/><LineBreak/>
                                ・本ソフト自体は<Bold Foreground="{StaticResource AccentColorLicense}">商用・非商用問わず任意の目的に利用できます</Bold>が、著作権は放棄されていません。
                                <LineBreak/><LineBreak/>
                                ・<Bold Foreground="{StaticResource AccentColorLicense}">キャラや追加プラグインのライセンスは本ソフトと独立</Bold>に守って下さい。
                                <LineBreak/><LineBreak/>
                                ・本ソフトのソースコードはGithubで公開される予定です。
                                <LineBreak/><LineBreak/>
                                ・本ソフトは以下の外部依存ライブラリを使用しています。ライセンスの詳細は"license.txt"に記載されています。
                                <LineBreak/><LineBreak/>
                                　　- Livet
                                <LineBreak/><LineBreak/>
                                　　- IronPython
                                <LineBreak/><LineBreak/>
                                　　- MetroRadiance
                                <LineBreak/><LineBreak/>
                                　　- (株)アクエストの音声合成エンジン"AquesTalk"
                            </Span>
                    </TextBlock>
                </ScrollViewer>
            </TabItem>
        </TabControl>       
    </Grid>
</Window>
